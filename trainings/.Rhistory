length()
gadm_n_files
gadm_n_files
gadm_names
a <- c("a", "b")
a == "a"
"adm2" %in% gadm_names
r <- bm_raster(roi_sf = roi_sf,
product_id = "VNP46A2",
date = ntl_days,
bearer = nasa_bearer, variable ="aaaa",
output_location_type = "file",
file_dir = file.path(ntl_bm_dir, "rasters", "daily"))
r <- bm_raster(roi_sf = roi_sf,
product_id = "VNP46A2",
date = "2012-01-01",
bearer = nasa_bearer, variable ="aaaa",
output_location_type = "file",
file_dir = file.path(ntl_bm_dir, "rasters", "daily"))
r <- bm_raster(roi_sf = roi_sf,
product_id = "VNP46A2",
date = "2013-01-01",
bearer = nasa_bearer, variable ="aaaa",
output_location_type = "file",
file_dir = file.path(ntl_bm_dir, "rasters", "daily"))
schools_df <- st_read(here("data", "schools.csv"))
#| code-fold: true
# Download data
## Load packages
library(tidyverse)
library(here)
library(sf)
library(terra)
library(geodata)
library(osmdata)
library(leaflet)
## Kenya
COUNTRY_OUT <- here("data", "kenya_adm1.geojson")
if(!file.exists(COUNTRY_OUT)){
ken_1_sf <- gadm("KEN", level=1, path = tempdir()) %>% st_as_sf()
ken_1_sf <- ken_1_sf %>% st_simplify(dTolerance = 60)
ken_1_sf <- ken_1_sf %>%
select(NAME_1)
st_write(ken_1_sf, COUNTRY_OUT, delete_dsn = T)
}
## Elevation
RAST_OUT <- here("data", "elevation.tif")
if(!file.exists(RAST_OUT)){
elev_r <- elevation_30s(country="KEN", path=tempdir())
writeRaster(elev_r, RAST_OUT, overwrite=T)
}
## Precipiation
RAST_STACK_OUT <- here("data", "precipitation.tif")
if(!file.exists(RAST_STACK_OUT)){
precip_kenya_r <- worldclim_country(var = "prec", res = 10,
country = "KEN",
path = tempdir())
writeRaster(precip_kenya_r, RAST_STACK_OUT, overwrite=T)
}
## Nairobi
POLY_OUT <- here("data", "city.geojson")
if(!file.exists(POLY_OUT)){
ken_sf <- gadm("KEN", level=2, path = tempdir()) %>% st_as_sf()
nbo_sf <- ken_sf %>% filter(NAME_1 %in% "Nairobi")
st_write(nbo_sf, POLY_OUT, delete_dsn = T)
}
## Roads
LINE_OUT <- here("data", "roads.geojson")
if(!file.exists(LINE_OUT)){
ken_sf <- gadm("KEN", level=2, path = tempdir()) %>% st_as_sf()
nbo_sf <- ken_sf %>% filter(NAME_1 %in% "Nairobi")
roads_list <- opq(bbox = st_bbox(nbo_sf)) %>%
add_osm_feature(key = 'highway', value = c('trunk',
'motorway',
'primary',
'secondary')) %>%
osmdata_sf()
roads_sf <- roads_list$osm_lines
roads_sf <- roads_sf %>% st_intersection(nbo_sf)
roads_sf$geom_type <- roads_sf %>% st_geometry_type %>% as.character()
roads_sf <- roads_sf[roads_sf$geom_type %in% "LINESTRING",]
roads_sf <- roads_sf %>%
dplyr::select(osm_id, name, highway)
st_write(roads_sf, LINE_OUT, delete_dsn = T)
}
## Schools
POINT_OUT <- here("data", "schools.csv")
if(!file.exists(POINT_OUT)){
ken_sf <- gadm("KEN", level=2, path = tempdir()) %>% st_as_sf()
nbo_sf <- ken_sf %>% filter(NAME_1 %in% "Nairobi")
schools_list <- opq(bbox = st_bbox(nbo_sf)) %>%
add_osm_feature(key = 'amenity',
value = 'school') %>%
osmdata_sf()
schools_sf <- schools_list$osm_points
schools_sf <- schools_sf %>% st_intersection(nbo_sf)
schools_sf <- schools_sf %>%
dplyr::select(osm_id, name)
schools_df <- schools_sf %>%
st_coordinates() %>%
as.data.frame() %>%
dplyr::rename(longitude = X,
latitude = Y)
write_csv(schools_df, POINT_OUT)
}
library(tidyverse)
library(here)
library(sf)
library(leaflet)
city_sf <- st_read(here("data", "city.geojson"), quiet = T)
# Examine first few observations
head(city_sf)
# Number of rows
nrow(city_sf)
# Filter
city_sf %>%
filter(NAME_2 == "Langata")
# Check coordinate reference system
st_crs(city_sf)
# Check geometry type
st_geometry_type(city_sf) %>% head()
# Calculate area
st_area(city_sf)
# Add as variable
city_sf <- city_sf %>%
mutate(area_m2 = st_area(city_sf))
ggplot() +
geom_sf(data = city_sf)
roads_sf <- st_read(here("data", "roads.geojson"), quiet = T)
head(roads_sf)
nrow(roads_sf)
st_length(roads_sf) %>% head()
ggplot() +
geom_sf(data = roads_sf)
schools_df <- read_csv(here("data", "schools.csv"))
head(schools_df)
schools_sf <- schools_df %>%
st_as_sf(coords = c("longitude", "latitude"),
crs = 4326)
head(schools_sf)
ggplot() +
geom_sf(data = schools_sf)
# Merge data with city
city_sf <- city_sf %>%
mutate(area = city_sf %>%
st_area %>% # Calculate area
as.numeric()) # Remove units
# Plot
ggplot() +
geom_sf(data = city_sf,
aes(fill = area),
color = "black") +
scale_fill_distiller(palette = "YlGnBu",
direction = -1) +
labs(fill = "Area",
title = "Area of Nairobi's ADM2s") +
theme_void() +
theme(legend.position = c(0.8, 0.3),
plot.title = element_text(face = "bold"))
leaflet() %>%
addTiles() %>% # Basemap
addPolygons(data = city_sf)
trunk_sf <- roads_sf %>%
filter(highway == "trunk")
leaflet() %>%
addTiles() %>%
addPolygons(data = city_sf, fillOpacity = 0.1) %>%
addPolylines(data = trunk_sf, color = "red") %>%
addCircles(data = schools_sf, color = "black")
## Dissolve
city_adm1_union_sf <- city_sf %>%
group_by(NAME_1) %>%
summarise(geometry = st_union(geometry)) %>%
ungroup()
city_adm1_combine_sf <- city_sf %>%
group_by(NAME_1) %>%
summarise(geometry = st_combine(geometry)) %>%
ungroup()
## Check N rows
nrow(city_sf) # Original
nrow(city_adm1_union_sf)
nrow(city_adm1_combine_sf)
## Plot
ggplot() +
geom_sf(data = city_adm1_union_sf,
aes(color = "Using: st_union"),
fill = NA,
linewidth = 3) +
geom_sf(data = city_adm1_combine_sf,
aes(color = "Using: st_combine"),
fill = NA,
linewidth = 1) +
labs(color = NULL) +
theme_void() +
theme(legend.position = c(0.8, 0.25))
motor_1km_sf <- roads_sf %>%
filter(highway == "motorway") %>%
st_buffer(dist = 1000)
ggplot() +
geom_sf(data = motor_1km_sf)
st_transform(city_sf, 21097) %>%
select(NAME_2) %>%
head()
city_sf %>%
st_centroid() %>%
select(NAME_2) %>%
head()
# INCORRECT: Does not work to remove geometry
city_sf %>%
select(-geometry) %>%
head()
# CORRECT: Remove geometry and convert from sf to dataframe
city_sf %>%
st_drop_geometry() %>%
head()
st_bbox(city_sf)
## Filter
motor_sf <- roads_sf %>%
filter(highway == "motorway")
lng_roy_sf <- city_sf %>%
filter(NAME_2 %in% c("Langata",
"Roysambu"))
## Intersect
motor_sf$inter_roads <- st_intersects(motor_sf, lng_roy_sf, sparse = F) %>%
apply(1, max)
## Examine results
table(motor_sf$inter_roads)
lng_roy_sf <- city_sf %>%
filter(NAME_2 %in% c("Langata",
"Roysambu")) %>%
st_union() # Simplifies things if make 1 unit
roads_lng_roy_sf <- st_intersection(roads_sf, lng_roy_sf)
ggplot() +
geom_sf(data = city_sf) +
geom_sf(data = lng_roy_sf, aes(color = "Langata or\nRoysambu")) +
geom_sf(data = roads_lng_roy_sf) +
labs(color = NULL) +
theme_void() +
theme(legend.position = c(0.8, 0.25))
lng_roy_sf <- city_sf %>%
filter(NAME_2 %in% c("Langata",
"Roysambu")) %>%
st_union() # Simplifies things if make 1 unit
roads_diff_sf <- st_difference(roads_sf, lng_roy_sf)
ggplot() +
geom_sf(data = city_sf) +
geom_sf(data = lng_roy_sf, aes(color = "Langata or\nRoysambu")) +
geom_sf(data = roads_diff_sf) +
labs(color = NULL) +
theme_void() +
theme(legend.position = c(0.8, 0.25))
city_kib_sf <- city_sf %>%
filter(NAME_2 %in% c("Kibra", "Langata", "Westlands"))
# Distance of each school to each ADM
st_distance(schools_sf, city_kib_sf) %>% head()
# For each ADM, minimum distance of each school to the ADMs
schools_sf$dist_adm_m <- st_distance(schools_sf, city_kib_sf) %>% apply(1, min)
schools_sf <- st_join(schools_sf, city_sf)
names(schools_sf)
#| message: false
#| warning: false
#| echo: fenced
## Load packages
library(tidyverse)
library(here)
library(sf)
## Load data
roads_sf   <- st_read(here("data", "roads.geojson"), quiet = T)
schools_df <- read_csv(here("data", "schools.csv"))
## Convert schools to sf object
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326)
## Prep roads data
trunk_sf <- roads_sf %>%
filter(highway == "trunk")
## Distance to schools
schools_sf$dist_trunk <- st_distance(schools_sf, trunk_sf) %>% apply(1, min)
## Proportion within 5km
mean(schools_sf$dist_trunk <= 1000)
#| message: false
#| warning: false
#| echo: fenced
## Load packages
library(tidyverse)
library(here)
library(sf)
library(purrr)
## Load data
roads_sf   <- st_read(here("data", "roads.geojson"), quiet = T)
schools_df <- read_csv(here("data", "schools.csv"))
## Convert schools to sf object
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326)
## Prep roads data
trunk_sf <- roads_sf %>%
filter(highway == "trunk")
## Distance to schools
schools_sf$dist_trunk <- st_distance(schools_sf, trunk_sf) %>% apply(1, min)
dist_df <- map_df(seq(0, 5, 0.5), function(dist_thresh_km){
prop <- mean(schools_sf$dist_trunk <= dist_thresh_km * 1000)
data.frame(dist_thresh_km = dist_thresh_km,
prop = prop)
})
dist_df %>%
ggplot() +
geom_line(aes(x = dist_thresh_km,
y = prop),
linewidth = 1) +
labs(x = "Distance to Trunk Road (km)",
y = "Prop. Schools") +
theme_classic()
#| message: false
#| warning: false
#| echo: fenced
## Load packages
library(tidyverse)
library(here)
library(sf)
library(terra)
library(exactextractr)
## Load data
nbo_sf  <- st_read(here("data", "city.geojson"), quiet = T)
roads_sf <- st_read(here("data", "roads.geojson"), quiet = T)
## Filter
kas_sf <- nbo_sf %>%
filter(NAME_2 == "Kasarani")
trunk_sf <- roads_sf %>%
filter(highway == "trunk")
## Computer length
trunk_sf %>%
st_intersection(kas_sf) %>%
st_length() %>%
sum()
#| message: false
#| warning: false
#| echo: fenced
## Load packages
library(tidyverse)
library(here)
library(sf)
## Load data
nbo_sf  <- st_read(here("data", "city.geojson"), quiet = T)
roads_sf <- st_read(here("data", "roads.geojson"), quiet = T)
## Define function to calculate length of roads for each row in nbo_sf
calc_rd_length <- function(nbo_sf, roads_sf){
lapply(1:nrow(nbo_sf), function(i){
roads_sf %>%
st_intersection(nbo_sf[i,]) %>%
st_length() %>%
sum()
}) %>%
unlist()
}
## Use function for each road types
for(highway_i in unique(roads_sf$highway)){
roads_sf_i <- roads_sf[roads_sf$highway == highway_i,]
nbo_sf[[paste0(highway_i, "_length_m")]] <- calc_rd_length(nbo_sf, roads_sf)
}
head(nbo_sf)
city_sf    <- st_read(here("data", "city.geojson"))
schools_df <- st_read(here("data", "schools.csv"))
schools_df <- read_csv(here("data", "schools.csv"))
schools_df <- read_csv(here("data", "schools.csv"))
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coordinates = c("longitude", "latitude"),
crs = 4326) %>%
st_buffer(dist = 1000)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coordinates = c("longitude", "latitude"),
crs = 4326) %>%
st_buffer(dist = 1000)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
st_buffer(dist = 1000)
schools_df <- read_csv(here("data", "schools.csv"))
nrow(schools_sf)
head(schools_sf)
schools_df <- read_csv(here("data", "schools.csv"))
schools_df
nrow(schools_df)
head(schools_df)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(10) %>%
st_buffer(dist = 1000)
schools_df <- read_csv(here("data", "schools.csv"))
elev_nbo_schools_r <- mask(elev_nbo_r, schools_sf)
elev_r <- rast(here("data", "elevation.tif"))
elev_nbo_mask_r <- mask(elev_nbo_r, city_sf)
city_sf <- st_read(here("data", "city.geojson"), quiet = T)
elev_nbo_mask_r <- mask(elev_nbo_r, city_sf)
elev_nbo_r <- crop(elev_r, city_sf)
elev_nbo_mask_r <- mask(elev_nbo_r, city_sf)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
plot(elev_nbo_schools_r)
plot(elev_nbo_schools_r)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(20) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
plot(elev_nbo_schools_r)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(100) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
plot(elev_nbo_schools_r)
plot(city_sf)
plot(elev_nbo_schools_r, add = T)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(100) %>%
st_buffer(dist = 1000)
schools_sf
plot(schools_sf)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(20) %>%
st_buffer(dist = 1000)
plot(schools_sf)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
plot(city_sf)
plot(elev_nbo_schools_r)
plot(elev_nbo_mask_r)
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(20) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
ggplot() +
geom_spatraster(data = elev_nbo_schools_r) +
geom_sf(data = city_sf) +
geom_sf(data = schools_sf)
ggplot() +
geom_spatraster(data = elev_nbo_schools_r) +
geom_sf(data = city_sf, color = "black", fill = NA) +
geom_sf(data = schools_sf, color = "red", fill = NA) +
theme_void()
schools_df <- read_csv(here("data", "schools.csv"))
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(1,100,200) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
ggplot() +
geom_spatraster(data = elev_nbo_schools_r) +
geom_sf(data = city_sf, color = "black", fill = NA) +
geom_sf(data = schools_sf, color = "red", fill = NA) +
theme_void()
schools_df <- read_csv(here("data", "schools.csv"))
nrow(schools_df)
schools_df <- read_csv(here("data", "schools.csv"))[c(1,100,200),]
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
head(1,100,200) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
ggplot() +
geom_spatraster(data = elev_nbo_schools_r) +
geom_sf(data = city_sf, color = "black", fill = NA) +
geom_sf(data = schools_sf, color = "red", fill = NA) +
theme_void()
schools_df <- read_csv(here("data", "schools.csv"))[c(1,100,200),]
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
ggplot() +
geom_spatraster(data = elev_nbo_schools_r) +
geom_sf(data = city_sf, color = "black", fill = NA) +
geom_sf(data = schools_sf, color = "red", fill = NA) +
theme_void()
schools_df <- read_csv(here("data", "schools.csv"))[c(1,1000,2000,3000),]
schools_sf <- st_as_sf(schools_df,
coords = c("longitude", "latitude"),
crs = 4326) %>%
st_buffer(dist = 1000)
elev_nbo_schools_r <- mask(elev_nbo_mask_r, schools_sf)
ggplot() +
geom_spatraster(data = elev_nbo_schools_r) +
geom_sf(data = city_sf, color = "black", fill = NA) +
geom_sf(data = schools_sf, color = "red", fill = NA) +
theme_void()
elev_nbo_excl_schools_r <- mask(elev_nbo_mask_r, schools_sf, inverse = T)
ggplot() +
geom_spatraster(data = elev_nbo_excl_schools_r) +
geom_sf(data = city_sf, color = "black", fill = NA) +
geom_sf(data = schools_sf, color = "red", fill = NA) +
theme_void()
help(exact_extract)
